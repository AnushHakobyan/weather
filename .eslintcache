[{"C:\\projects\\weather\\src\\App.tsx":"1","C:\\projects\\weather\\src\\WeatherApi.ts":"2","C:\\projects\\weather\\src\\index.tsx":"3","C:\\projects\\weather\\src\\WindInfo.tsx":"4","C:\\projects\\weather\\src\\MainWeather.tsx":"5"},{"size":448,"mtime":1610491866943,"results":"6","hashOfConfig":"7"},{"size":1218,"mtime":1610489158581,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1609080620179,"results":"9","hashOfConfig":"7"},{"size":278,"mtime":1610491748353,"results":"10","hashOfConfig":"7"},{"size":629,"mtime":1610491992897,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vyninj",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\weather\\src\\App.tsx",["23"],"C:\\projects\\weather\\src\\WeatherApi.ts",["24"],"import axios from 'axios';\nimport { camelizeKeys } from 'humps';\n\nconst API_KEY: string = 'ee9c5537f9765b62b83672b1e4c23b19';\n\ninterface MainWeatherResponse {\n    feels_like: number,\n    humidity: number,\n    pressure: number,\n    temp: number,\n    temp_max: number,\n    temp_min: number,\n}\n\ninterface MainWindResponse {\n    deg: number,\n    speed: number,\n}\n\ninterface MainWind extends MainWindResponse {}\n\ninterface MainWeather {\n    feelsLike: number,\n    humidity: number,\n    pressure: number,\n    temp: number,\n    tempMax: number,\n    tempMin: number,\n}\n\ninterface CurrentWeatherResponse {\n    main: MainWeatherResponse,\n    wind: MainWindResponse,\n    name: string,\n    timezone: number,\n}\n\ninterface CurrentWeather {\n    main: MainWeather,\n    wind: MainWind,\n    name: string,\n    timezone: number,\n}\n\n\ninterface ServerResponse {\n    data: CurrentWeatherResponse\n}\n\nexport const getCurrentWeather = async (city: string): Promise<object>  => {\n    const response: ServerResponse = await axios.get(`https:/api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n    const { data }: { data: CurrentWeatherResponse } = response;\n    const weatherData = camelizeKeys(data);\n    return weatherData;\n}","C:\\projects\\weather\\src\\index.tsx",[],"C:\\projects\\weather\\src\\WindInfo.tsx",[],"C:\\projects\\weather\\src\\MainWeather.tsx",[],{"ruleId":"25","severity":2,"message":"26","line":16,"column":8,"nodeType":"27","endLine":16,"endColumn":15},{"ruleId":"28","severity":1,"message":"29","line":38,"column":11,"nodeType":"30","messageId":"31","endLine":38,"endColumn":25},"react/jsx-no-undef","'Weather' is not defined.","JSXIdentifier","@typescript-eslint/no-unused-vars","'CurrentWeather' is defined but never used.","Identifier","unusedVar"]